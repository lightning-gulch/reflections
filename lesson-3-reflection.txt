When would you want to use a remote repository rather than keeping all your work
local?

    You would probably want to use a remote repository in situations where you are 
    collaborating with others that are using their own workstations with local 
    repositories. Or in situations where you want a backup of your work in a remote
    location. Or if you want to have the repository public for contributors to view
    and add to.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    In situations where you are colaborating with others you may not be ready for your
	work to be pulled from your local repo. Automatic pulls takes this control away.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    These are all ways to make changes without affecting the existing version of
	your work. A branch adds the new changes in the same repository whereas cloning 
	and forking copy the repository to a new location to make the changes. Forking
	is a GitHub feature and the copy of the repository is from one location on GitHub 
	to another location on GitHub. Forking allows public changes to a repository while
	maintaingin the original by permissions - do not allow public modification, only 
	forking. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This allows you to work offline and merge the changes into your own branches when
	ready. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without Git or GitHub you could possibly make use of shared directories either
	online or common networks. It would be difficult and require constant validation,
	naming conventions and back ups and many more files to deal with. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
